backend = "glx";
vsync = true;
glx-use-copysubbuffer-mesa = true;
# glx-copy-from-front = true;
# glx-swap-method = 2;
xrender-sync = true;
xrender-sync-fence = true;

# corners
rounded-corners = true;
corner-radius = 6;

# Exclude specific windows from rounded corners (optional)
rounded-corners-exclude = [
  "class_g = 'i3-frame'",
  "class_g = 'rofi'",
 "name = 'Notification'",
  "window_type = 'dock'",
  "window_type = 'desktop'"
];

detect-rounded-corners = true;

# Blur
blur-method = "dual_kawase";
blur-size = 8;
blur-strength = 6;
blur-background = true;
blur-background-frame = false;
blur-kern = "3x3box";
blur-background-exclude = [
  "window_type = 'Polybar'",
  "window_type = 'desktop'",
  "window_type = 'dock'",
  "role = 'xborder'",
  "class_g = 'Conky'",
  "name = 'Notification'",
  "_GTK_FRAME_EXTENTS"
];

# Enable shadows
shadow = true;
shadow-radius = 20;
shadow-offset-x = -17;
shadow-offset-y = -17;
shadow-opacity = 0.4;
shadow-color = "#000000";

# Fading
fading = true;
fade-in-step = 0.04;  # Slightly slower, for a smoother fade-in
fade-out-step = 0.04;  # Slightly slower fade-out as well, for consistency
fade-delta = 10;  # Remains the same, fine-tunes the fade delta
fade-time = 200;  # Increase fade-time to 300ms for a more gradual fade-in
fade-duration = 300;  # Slightly longer fade-duration for a smoother transition
no-fading-openclose = true;  # Keep this to prevent fade during open/close transitions
no-fading-destroyed-argb = true;  # No fading for destroyed ARGB windows

wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 1.0; }
  dropdown_menu = { opacity = 1.0; }
};


#################################
#     Animation Settings    #
#################################

animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["open", "show"];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)
